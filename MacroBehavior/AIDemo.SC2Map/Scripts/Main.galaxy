include "TriggerLibs/NativeLib"
include "scripts/blackboard"
include "scripts/longtravel"
include "scripts/workers"
include "scripts/orbitalcommand"
include "scripts/utils"
include "scripts/macro"
include "scripts/expand"
include "scripts/focusfire"
include "scripts/siegemicro"
include "scripts/spread"
include "scripts/generalbuild"
include "scripts/stutterstep"
include "scripts/defend"
include "scripts/stimpackmicro"
include "scripts/harassreaction"
include "scripts/reaperharrassingenemybase"

// This file creates and starts the Anybot AI.

// Create Triggers
void RegisterTriggers()
{
    // General Utils triggers
    trigger t = TriggerCreate("UtilsOnUnitCreated");
    TriggerAddEventUnitCreated(t, null, null, null);
    t = TriggerCreate("UtilsOnUnitDied");
    TriggerAddEventUnitDied(t, null);
    t = TriggerCreate("UtilsOnStructureCreated");
    TriggerAddEventUnitConstructProgress(t, null, c_unitProgressStageComplete);
    t = TriggerCreate("UtilsAttackBack");
    TriggerAddEventUnitAttacked2(t, null, null);

    // Macro triggers
    t = TriggerCreate("MacroOnMineralsPropertyChanged");
    TriggerAddEventPlayerPropChange(t, gTeamNumber, c_playerPropMinerals);
    t = TriggerCreate("MacroOnMineralsPropertyChanged");
    TriggerAddEventPlayerPropChange(t, gTeamNumber, c_playerPropVespene);

    // Focus Fire triggers
    t = TriggerCreate("FocusFireOnUnitAttacked");
    TriggerAddEventUnitAttacked2(t, null, null);

    // Spread micro triggers
    SpreadRegisterTriggers();

    // Siege Micro triggers
    SiegeMicroRegisterTriggers();

    // Defend triggers
    DefendRegisterTriggers();

	// Stimpack Trigger
	StimpackRegisterTriggers();

    // Workers triggers
    WorkersRegisterTriggers();

    // Orbital Command triggers
    OrbitalCommandRegisterTriggers();

	//Missle Turret Triggers
	HarassReactionRegisterTriggers();
}

// Initialize and set up the map
void mapInitiated() {
    // Scenario set-up local variables
    int i = 0;

    // Set up fog of war
    if (!gFogOfWarOn) {
        VisEnable(c_visTypeFog, false);
    }

    // Set up game speed
    if (gFastestSpeed) {
        GameSetSpeedValue(c_gameSpeedFaster);
    }

    // Register our triggers so that we can see when events occur in the gameplay
    RegisterTriggers();

    // Initialize global arrays
    //// Possible terran units (This was necessary as Galaxy Script does not have any built in list of all the units)
    gMyPossibleUnits[0] = "Banshee";
    gMyPossibleUnits[1] = "Battlecruiser";
    gMyPossibleUnits[2] = "Cyclone";
    gMyPossibleUnits[3] = "Ghost";
    gMyPossibleUnits[4] = "Hellbat(BattleMode)";
    gMyPossibleUnits[5] = "Hellion";
    gMyPossibleUnits[6] = "HERC";
    gMyPossibleUnits[7] = "Liberator(AA)";
    gMyPossibleUnits[8] = "Liberator(AG)";
    gMyPossibleUnits[9] = "Marauder";
    gMyPossibleUnits[10] = "Marine";
    gMyPossibleUnits[11] = "Medivac";
    gMyPossibleUnits[12] = "MULE";
    gMyPossibleUnits[13] = "PointDefenseDrone";
    gMyPossibleUnits[14] = "Raven";
    gMyPossibleUnits[15] = "Reaper";
    gMyPossibleUnits[16] = "SCV";
    gMyPossibleUnits[17] = "SeekerMissle";
    gMyPossibleUnits[18] = "SiegeTank";
    gMyPossibleUnits[19] = "SiegeTankSieged";
    gMyPossibleUnits[20] = "Thor-ExplosivePaylodeMode";
    gMyPossibleUnits[21] = "Thor";
    gMyPossibleUnits[22] = "VikingAssault";
    gMyPossibleUnits[23] = "VikingFighter";
    //// Possible terran structures
    gMyPossibleStructures[0] = "Armory";
    gMyPossibleStructures[1] = "AutoTurret";
    gMyPossibleStructures[2] = "Barracks";
    gMyPossibleStructures[3] = "BarracksFlying";
    gMyPossibleStructures[4] = "EngineeringBay";
    gMyPossibleStructures[5] = "Bunker";
    gMyPossibleStructures[6] = "CommandCenter";
    gMyPossibleStructures[7] = "CommandCenterFlying";
    gMyPossibleStructures[8] = "Factory";
    gMyPossibleStructures[9] = "FactoryFlying";
    gMyPossibleStructures[10] = "FusionCore";
    gMyPossibleStructures[11] = "GhostAcademy";
    gMyPossibleStructures[12] = "MissleTurret";
    gMyPossibleStructures[13] = "OrbitalCommand";
    gMyPossibleStructures[14] = "OrbitalCommandFlying";
    gMyPossibleStructures[15] = "PlanetaryFortress";
    gMyPossibleStructures[16] = "Reactor";
    gMyPossibleStructures[17] = "BarracksReactor";
    gMyPossibleStructures[18] = "FactoryReactor";
    gMyPossibleStructures[19] = "StarportReactor";
    gMyPossibleStructures[20] = "Refinery";
    gMyPossibleStructures[21] = "SensorTower";
    gMyPossibleStructures[22] = "Starport";
    gMyPossibleStructures[23] = "StarportFlying";
    gMyPossibleStructures[24] = "SupplyDepot";
    gMyPossibleStructures[25] = "SupplyDepotLowered";
    gMyPossibleStructures[26] = "TechLab";
    gMyPossibleStructures[27] = "BarracksTechLab";
    gMyPossibleStructures[28] = "FactoryTechLab";
    gMyPossibleStructures[29] = "StarportTechLab";
    //// Possible zerg structures
    gEnemyPossibleStructures[0] = "BanelingNest";
    gEnemyPossibleStructures[1] = "CreepTower";
    gEnemyPossibleStructures[2] = "CreepTumorBurrowed";
    gEnemyPossibleStructures[3] = "EvolutionChamber";
    gEnemyPossibleStructures[4] = "Extractor";
    gEnemyPossibleStructures[5] = "GreaterSpire";
    gEnemyPossibleStructures[6] = "Hatchery";
    gEnemyPossibleStructures[7] = "Hive";
    gEnemyPossibleStructures[8] = "HydraliskDen";
    gEnemyPossibleStructures[9] = "InfestationPit";
    gEnemyPossibleStructures[10] = "Lair";
    gEnemyPossibleStructures[11] = "LurkerDen";
    gEnemyPossibleStructures[12] = "NydusCanal";
    gEnemyPossibleStructures[13] = "NydusNetwork";
    gEnemyPossibleStructures[14] = "NydusWorm(Canal)";
    gEnemyPossibleStructures[15] = "RoachWarren";
    gEnemyPossibleStructures[16] = "SpawningPool";
    gEnemyPossibleStructures[17] = "SpineCrawler";
    gEnemyPossibleStructures[18] = "SpineCrawlerUprooted";
    gEnemyPossibleStructures[19] = "Spire";
    gEnemyPossibleStructures[20] = "SporeCrawler";
    gEnemyPossibleStructures[21] = "SporeCrawlerUprooted";
    gEnemyPossibleStructures[22] = "UltraliskCavern";
    // Base Variables
    for (; i < gMaxExpansions; i += 1) {
        gBarracksAtBase[i] = 0;
        gExhaustedBases[i] = false;
        gActiveBases[i] = false;
        gTempBarracksAtBase[i] = 0;
        gSCVsAtBases[i] = 0;
    }

    // Set up scenario
    // This is the normal scenario for typical gameplay
    // Create the Hatchery and Drones for the human player
    UnitCreate(1, "Hatchery", c_unitCreateIgnorePlacement, (3 - gTeamNumber), PointFromName("HumanStart"), 270.0);
    UnitCreate(1, "Overlord", 0, (3 - gTeamNumber), PointFromName("HumanStart"), 270.0);
    UnitCreate(12, "Drone", 0, (3 - gTeamNumber), PointFromName("HumanStart"), 270.0);
    // Create the Command Center and SCV's for AnyBot
    UnitCreate(1, "CommandCenter", c_unitCreateIgnorePlacement, gTeamNumber, PointFromName("AnyBotStart"), 270.0);
    UnitCreate(1, "SupplyDepot", 0, gTeamNumber, UnitTypePlacementFromPoint("SupplyDepot", 2, PointFromName("SupplyDepots0"), 20), 270.0);
    UnitCreate(12, "SCV", 0, gTeamNumber, PointFromName("AnyBotStart"), 270.0);


    // Set up state machine for build decisions
    MacroSetUpStateMachine();

    // Set up our strategy for basic runActions
    ExpandSetupBuildOrder();

}
